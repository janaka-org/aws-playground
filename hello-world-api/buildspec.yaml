version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - REPOSITORY_URI=$(echo $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME)
      - echo $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG_COMMIT_HASH=${COMMIT_HASH:=latest}
      - echo $IMAGE_TAG_COMMIT_HASH
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - cd hello-world-api
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$(sed '2!d' version)
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG_COMMIT_HASH
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:$(sed '2!d' version)
      - docker push $REPOSITORY_URI:$IMAGE_TAG_COMMIT_HASH
#       - echo Writing image definitions file...
#       - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
#       - echo Build completed on `date`
# artifacts:
#   files:
#     - appspec.yaml
#     - taskdef.json
#   secondary-artifacts:
#     DefinitionArtifact:
#       files:
#         - appspec.yaml
#         - taskdef.json
#     ImageArtifact:
#       files:
#         - imageDetail.json
